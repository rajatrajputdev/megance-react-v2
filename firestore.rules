rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && (
        request.auth.token.admin == true ||
        request.auth.token.email == 'megancetech@gmail.com'
      );
    }

    // Client must not create/update protected fields; server (Admin SDK) bypasses rules
    function notChangingProtected() {
      return !request.resource.data.keys().hasAny(["phone", "phoneVerified"]);
    }

    // User profile
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create, update: if isOwner(userId) && notChangingProtected();
      allow delete: if false;

      // User orders subcollection (client may create own view copy)
      match /orders/{orderId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId);
        allow update, delete: if false;
      }
    }

    // Top-level orders created by client and used by Cloud Functions
    match /orders/{orderId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Server (Admin SDK) bypasses rules
    }

    // Public catalog
    match /products/{productId} {
      allow read: if true;  // public catalog can be read by anyone
      // Admins can manage products from the back office
      allow create, update, delete: if isAdmin();
    }

    // Coupons managed by admin; client reads via callables only
    match /coupons/{code} {
      allow read, write: if isAdmin();
      match /users/{uid} {
        allow read, write: if isAdmin();
      }
    }

    // Categories collection (public read, admin manage)
    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Refund Requests
    // Top-level collection for ops views; client may create their own request document.
    match /refundRequests/{requestId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }

    // Per-user subcollection (mirror) for quick user access
    match /users/{userId}/refundRequests/{requestId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update, delete: if false;
    }

    // Default: deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
